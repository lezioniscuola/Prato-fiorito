import java.util.Random;
import java.util.Scanner;
public class PratoFiorito {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int lunghezza;
        int larghezza;
        boolean control;
        boolean vittoria = false;
        int j;
        int i;
        System.out.println("Metti la larghezza");
        larghezza = in.nextInt();
        System.out.println("Metti la lunghezza");
        lunghezza = in.nextInt();
        int[][] matrice = creamatrice(larghezza, lunghezza);
        boolean[][] matriceBoolean = Creamatriceboolean(lunghezza, larghezza);
        PosizionamentoFiori(matrice, matriceBoolean);
        do{
            StampaCampo(matrice, matriceBoolean, lunghezza, larghezza);
            System.out.println("Inserisci le coordinate della tua scelta(prima la lunghezza e poi la larghezza)");
            i=in.nextInt()-1;
            j=in.nextInt()-1;
            control = FlowerControl(matrice, i, j);
            matriceBoolean=Scoperchiato(matriceBoolean, i, j);
            vittoria=ControlloMosseDisponibili(matriceBoolean, lunghezza, larghezza);
        }while(!control&&!vittoria);
        if(vittoria){
            System.out.println("Hai vinto!");
        }
        else{
            System.out.println("Hai perso");
        }
    }

    public static int[][] creamatrice(int larghezza, int lunghezza) {
        int[][] matrice = new int[larghezza][lunghezza];
        return matrice;
    }

    private static boolean[][] Creamatriceboolean(int lunghezza, int larghezza) {
        boolean[][] booleanmatrix = new boolean[larghezza][lunghezza];
        return booleanmatrix;
    }

    public static void PosizionamentoFiori(int[][] matrice, boolean[][] matriceBoolean) {
        Random random = new Random();
        for (int i = 0; i < matrice.length; i++) {
            for (int j = 0; j < matrice[i].length; j++) {
                if (random.nextInt(4) == 1) {
                    matrice[i][j] = 9;
                    matriceBoolean[i][j] = false;
                    incrementoAdiacenti(matrice, i, j);
                }
            }
        }
    }
    public static void StampaCampo (int[][]matrice, boolean[][]matriceBoolean, int lunghezza, int larghezza){
        for (int i=0;i<larghezza;i++){
            for (int j=0;j<lunghezza;j++){
                char quadrato = 9632;
                if(matriceBoolean[i][j]==true&&matrice[i][j]!=9) {
                    System.out.print(matrice[i][j] + "  ");
                }
                else{
                    System.out.print(quadrato + "  ");
                }
            }
            System.out.println();
        }
    }
    public static boolean FlowerControl(int [][] matrice, int i, int j){
        boolean controllo=false;
        if(matrice[i][j]==9)
            return true;
        else
            return false;
    }
    public static boolean ControlloMosseDisponibili(boolean[][] matriceBoolean, int lunghezza, int larghezza ) {
        boolean vittoria = true;
        for (int i = 0; i < larghezza; i++) {
            for (int j = 0; j < lunghezza; j++) {
                if (matriceBoolean[i][j]==false) {
                    vittoria = false;
                    break;
                }
            }
        }
        return vittoria;
    }
    public static boolean[][] Scoperchiato(boolean[][]matriceBoolean, int i, int j){
        matriceBoolean[i][j]=true;
        return matriceBoolean;
    }
    public static void incrementoAdiacenti(int[][] matrice, int i, int j){
        for (int x = -1; x <= 1; x++) {
            for (int y = -1; y <= 1; y++) {
                if (x == 0 && y == 0)
                    continue;
                int leftRight = i + x;
                int upDown = j + y;
                if (leftRight >= 0 && leftRight < matrice.length && upDown >= 0 && upDown < matrice[i].length && matrice[leftRight][upDown] != 9) {
                    matrice[leftRight][upDown]++;
                }
            }
        }
    }
}
